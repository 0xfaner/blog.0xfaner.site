<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo 静态博客框架 NexT 主题配置教程</title>
    <url>/posts/hexo-next-config/</url>
    <content><![CDATA[<h1 id="写在前面">写在前面</h1>
<p>Hexo 是一款基于 Node.js 的静态博客框架。它通过解析 Markdown 文章生成静态网页。只需要将 Hexo 生成的文件托管到平台上，即可完成博客的部署。</p>
<p>Hexo 的主题包非常丰富，NexT 主题是其中的佼佼者，本文将使用该主题搭建博客，首先介绍如何从零开始搭建一个本地的 Hexo 运行环境，然后讲解如何将你的网站发布到云端。</p>
<span id="more"></span>
<h2 id="相关链接">相关链接</h2>
<p>有精力更深入探索的同学可以自行阅读 Hexo 和 NexT 的官方文档，以获得更全面的了解。</p>
<div class="note info"><p>Hexo 仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhv">github.com/hexojs/hexo<i class="fa fa-external-link-alt"></i></span><br />
Hexo 文档：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">hexo.io<i class="fa fa-external-link-alt"></i></span><br />
NexT 仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">github.com/next-theme/hexo-theme-next<i class="fa fa-external-link-alt"></i></span><br />
NexT 文档：<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZw==">theme-next.js.org<i class="fa fa-external-link-alt"></i></span></p>
</div>
<p>推荐使用 Visual Studio Code 和它自带的 Terminal 来帮助我们管理博客。以获得最佳开发体验。</p>
<div class="note info"><p>Visual Studio Code：<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20=">code.visualstudio.com<i class="fa fa-external-link-alt"></i></span></p>
</div>
<p><img src="vscode-page.png" /></p>
<h1 id="本地-hexo-配置">本地 Hexo 配置</h1>
<h2 id="从安装环境开始">从安装环境开始</h2>
<p>我们需要在本地安装 Node.js，用于提供 JavaScript 运行环境，并提供 npm 包管理器用于安装 Hexo 框架、NexT 主题和相关插件。</p>
<p>为了直接从 GitHub 下载主题，或者把博客部署到服务器或 GitHub，我们还需要安装 Git。</p>
<div class="note info"><p>Node.js：<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3Jn">nodejs.org<i class="fa fa-external-link-alt"></i></span><br />
Git：<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbQ==">git-scm.com<i class="fa fa-external-link-alt"></i></span></p>
</div>
<h2 id="初始化站点文件夹">初始化站点文件夹</h2>
<p>假定我们将要在 <code>C:/Users/0xfaner/workspace/</code> 文件夹下创建一个名为 <code>hexo-blog</code> 的文件夹，作为博客项目的根目录。</p>
<p>首先安装 Hexo 的命令行界面，然后在<strong>自己指定的目录</strong>下初始化 Hexo，并进入站点文件夹中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/workspace</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init hexo-blog</span><br><span class="line"><span class="built_in">cd</span> hexo-blog</span><br></pre></td></tr></table></figure>
<h2 id="认识-hexo-命令">认识 Hexo 命令</h2>
<p>现在我们已经得到了一个初始的 Hexo 博客。让我们先认识一下 Hexo 的一些命令，再对博客进行个性化配置。</p>
<ul>
<li><code>hexo clean</code>: 清除生成的静态文件和缓存；</li>
<li><code>hexo generate</code>: 生成静态文件，可以简写为 <code>hexo g</code>；
<ul>
<li><code>hexo generate -d</code>: 生成静态文件后将其部署，相当于 <code>hexo generate &amp;&amp; hexo deploy</code>，可以简写为 <code>hexo g -d</code>；</li>
</ul></li>
<li><code>hexo server</code>: 启动网站服务，此时可以在浏览器中访问网站，可以简写为 <code>hexo s</code>；
<ul>
<li><code>hexo server --port [port]</code>: 指定服务端口，可以简写为 <code>hexo s -p [port]</code>；</li>
<li><code>hexo server --open</code>: 启动服务后立即在本机默认浏览器中打开网站，可以简写为 <code>hexo s -o</code>；</li>
</ul></li>
<li><code>hexo deploy</code>: 用于部署静态文件到远端服务器或平台，可以简写为 <code>hexo s -o</code>；
<ul>
<li><code>hexo deploy -g</code>: 部署前生成静态文件，相当于 <code>hexo generate &amp;&amp; hexo deploy</code>，可以简写为 <code>hexo d -g</code>。</li>
</ul></li>
</ul>
<p>大多数时候我们只需要用到两个组合命令。</p>
<ul>
<li><code>preview: hexo server -open</code>: 在 4000 端口启动网站服务并打开网页预览博客。</li>
<li><code>publish: hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</code>： 重新生成静态文件后部署到远端服务器或平台。</li>
</ul>
<p>读者们可以尝试在本地运行一下 <code>preview</code> 命令，浏览器将自动打开 <code>localhost</code>，你将看到你的初始博客的样子。在后续的配置中，你可以随时运行该命令来查看你的修改所起的效果。</p>
<p><strong>使用技巧</strong></p>
<p>平时我们要经常组合使用这些命令，但是在命令行中敲写命令还是稍慢，我们可以利用 Visual Studio Code 帮助运行脚本，在站点文件夹中找到 <code>package.json</code> 文件，添加两条脚本：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo generate&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;clean&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo server&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;preview&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo server --open&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;publish&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>然后我们可以在 Visual Studio Code 的 Explorer 框中找到 NPM scripts 栏（找不到的话可以在 Explorer 右键菜单中勾选让它显示），点击相应条目的 run 按钮即可快捷运行相应脚本。</p>
<h2 id="修改站点配置文件">修改站点配置文件</h2>
<p>站点的配置文件为站点文件夹下的 <code>_config.yml</code> 文件。该文件描述了站点的源信息：标题、副标题、语言、时区等。我们可以通过修改该文件来完成对站点的配置。</p>
<p><code>.yml</code> 文件对应了标记语言 <code>YAML</code>，用来表示序列化数据。在后面我们还会看到对应了标记语言 <code>Json</code> 的 <code>.json</code> 文件，功能和 <code>YAML</code> 接近，只是格式不同。</p>
<div class="note warning"><p><code>hexo server</code> 运行中会检测博文的变动并进行动态更新，但是并不会检测配置文件的修改，你需要重新运行命令才能让更改生效。</p>
</div>
<h2 id="安装-next-主题">安装 NexT 主题</h2>
<p>在旧版 Hexo 中，应用主题的一个方式是从 GitHub 将主题仓库 Clone 到本地，放置在 Hexo 的 <code>themes</code> 文件夹下。这样一来整个主题对于用户来说就是透明的。我们可以随意修改主题文件夹内的任何文件来获得我们想要的效果，但这同时也带来了一些让人头疼的问题。</p>
<p>第一个问题是，NexT 主题更新非常频繁，如果我们想要让自己的主题保持最新，则需要不断与 GitHub 进行同步，我们不仅需要维护整个站点的仓库，还要单独维护主题仓库，定时从 GitHub 进行拉取。</p>
<p>第二个问题是，当我们对主题文件进行修改时，很容易让自己对 NexT 的修改与仓库的某处改动产生冲突，有时需要手动 Merge。</p>
<p>在新版 Hexo 中，有一个新方案解决了第一个问题，即使用包管理。我们可以使用包管理器来将主题作为一个 JavaScript 包进行安装，运行以下命令即可。参考 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC9pbnN0YWxsYXRpb24uaHRtbCNVc2luZy1ucG0=">Installation | NexT<i class="fa fa-external-link-alt"></i></span>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>
<p>从设计上来说，我们不应该直接修改 <code>node_modules</code> 文件夹中的内容。因此在这种情况下我们很难自由对主题进行自定义。一个有经验的开发者应当尝试直接给开源社区提 PR，这样不仅实现了自己的需求，更可以回馈开源社区。这种做法也直接消除了第二个问题：作为开发者，合并冲突根本不算什么，对吧？</p>
<p><strong>使用技巧</strong></p>
<p>我们可以全局安装 <code>npm-check-updates</code> 包来帮助我们检查 <code>package.json</code> 中的依赖是否是最新版本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install npm-check-updates -g</span><br></pre></td></tr></table></figure>
<p>检查更新时，我们只需要运行 <code>ncu</code> 命令即可，如果有待更新的包，则可以直接运行 <code>ncu -u</code> 命令来一键升级。</p>
<h2 id="配置-next-主题">配置 NexT 主题</h2>
<p>Hexo 的初始主题为 LandScape，我们对 <code>_config.yml</code> 进行修改，即可切换到 NexT 主题。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
<p>读者们可以运行 <code>preview</code> 命令来查看 NexT 主题的样子。</p>
<p>与 Hexo 一样，NexT 主题的配置也依靠 <code>_config.yml</code> 文件。但是注意站点和主题的配置文件不是同一个文件，站点配置文件位于博客文件夹根目录下，而主题配置文件位于主题文件夹下。如果主题是通过 Git 安装的，那么主题配置文件位于 <code>themes/next</code> 文件夹中。如果是通过包管理安装的，那么主题配置文件位于 <code>node_modules/hexo-theme-next</code> 文件夹中。</p>
<p>通常情况下我们可以直接修改主题配置文件来配置主题，但是并不推荐这么做。推荐使用 Alternate Theme Config（备用主题配置）来配置 NexT。具体地，我们将主题配置文件复制到博客根目录，命名为 <code>_config.next.yml</code>，然后对该文件进行修改即可。参考 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC9jb25maWd1cmF0aW9uLmh0bWw=">Configuration | NexT<i class="fa fa-external-link-alt"></i></span>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Installed through npm</span></span><br><span class="line"><span class="built_in">cp</span> node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br><span class="line"><span class="comment"># Installed through Git</span></span><br><span class="line"><span class="built_in">cp</span> themes/next/_config.yml _config.next.yml</span><br></pre></td></tr></table></figure>
<h2 id="配置插件">配置插件</h2>
<p>有些功能是 Hexo 默认关闭的，需要我们手动安装插件并启用，这里介绍一些常用的功能及其对应的插件。</p>
<h3 id="数学公式">数学公式</h3>
<p>插件名：<a href="https://github.com/wzpan/hexo-renderer-pandoc"><code>hexo-renderer-pandoc</code></a></p>
<p>当我们想要在博文中嵌入数学公式时，启用 <span class="math inline">\(\LaTeX\)</span> 支持是一个明智的选择。不论是行内公式还是行间公式，都可以用一串简单的符号来表示。</p>
<p>Hexo 默认使用 <a href="https://github.com/hexojs/hexo-renderer-marked"><code>hexo-renderer-marked</code></a> 来进行渲染，但这个插件会导致 Markdown 标记和部分数学公式冲突，而 <code>hexo-renderer-pandoc</code> 则可以完美渲染。</p>
<div class="note warning"><p>若需要使用 <code>hexo-renderer-pandoc</code>，除了安装插件，还需要本地拥有 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pnbS9wYW5kb2MvYmxvYi9tYXN0ZXIvSU5TVEFMTC5tZA==">Pandoc<i class="fa fa-external-link-alt"></i></span> 的环境。参考：<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoaXJkLXBhcnR5LXNlcnZpY2VzL21hdGgtZXF1YXRpb25zLmh0bWw=">Math Equations | NexT<i class="fa fa-external-link-alt"></i></span></p>
</div>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked</span><br><span class="line">npm install hexo-renderer-pandoc</span><br></pre></td></tr></table></figure>
<p>我们还需要在 <code>_config.next.yml</code> 文件中进行修改。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="comment"># Warning: Please install / uninstall the relevant renderer according to the documentation.</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/math-equations</span></span><br><span class="line"><span class="comment"># Server-side plugin: https://github.com/next-theme/hexo-filter-mathjax</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (false) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to true, it will load mathjax / katex script EVERY PAGE.</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: none | ams | all</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">all</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h3 id="数据检索">数据检索</h3>
<p>插件名：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1nZW5lcmF0b3Itc2VhcmNoZGI=">hexo-generator-searchdb<i class="fa fa-external-link-alt"></i></span></p>
<p>专为 NexT 开发的数据检索插件，可以在侧边栏中看到一个检索按钮，点击即可弹出数据检索框，当你的博文内容较多时，启用搜索是个明智的选择。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>
<p>我们还需要在 <code>_config.next.yml</code> 文件中进行修改。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Search Services</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/search-services</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">-1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h3 id="字数统计">字数统计</h3>
<p>插件名：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by13b3JkLWNvdW50ZXI=">hexo-word-counter<i class="fa fa-external-link-alt"></i></span></p>
<p>专为 NexT 开发的字数统计插件，可以在每一篇文章的标题下显示字数，并在博客页脚显示整个博客的总字数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-word-counter</span><br></pre></td></tr></table></figure>
<p>我们还需要在 <code>_config.next.yml</code> 文件中进行修改。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-word-counter</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="远端部署">远端部署</h3>
<p>插件名：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWRlcGxveWVyLWdpdA==">hexo-deployer-git<i class="fa fa-external-link-alt"></i></span></p>
<p>Hexo 官方提供的基于 Git 的部署插件，安装该插件后才可以使用 <code>hexo deploy</code> 命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>
<p>我们还需要在 <code>_config.yml</code> 文件中进行修改。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:0xfaner/0xfaner.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>
<p>如果是希望部署到服务器，那么我们必须使用该插件，但如果是希望部署到 GitHub，我们可以采用其他方案。</p>
<h1 id="部署到-github">部署到 GitHub</h1>
<p>GitHub 是世界上最大最先进的代码托管平台，当我们注册完账号，可以将自己的代码托管在 GitHub 中。同时 GitHub 提供了 GitHub Pages 的服务，它是一个静态站点托管服务，直接从 GitHub 上的存储库中获取 HTML、CSS 和 JavaScript 文件，并生成网站。</p>
<p>有两种方案进行博客的部署：</p>
<ul>
<li><p>第一种：将站点源文件保存在本地，利用 <code>hexo-deployer-git</code> 插件将博客部署到 GitHub Pages。</p></li>
<li><p>第二种：将站点源文件保存在 GitHub，利用 GitHub Action，每次源文件仓库更新时自动部署到 GitHub Pages。</p></li>
</ul>
<p>第一种方案较为常用，但第二种方案更为优秀。让我们细数第二种方案有哪些优点：</p>
<ol type="1">
<li>所有的文件都在 GitHub 有备份，数据更安全；</li>
<li>版本管理工具 Git 可以让站点源文件的变化清晰可见可溯源；</li>
<li>当我们配好博客设置并部署到 GitHub 后即可抛弃本地环境，添加博文可以直接在 GitHub 网站中完成，实现在线写作。</li>
</ol>
<p>本文将介绍第二种方案。</p>
<h2 id="配置本地-git">配置本地 Git</h2>
<p>首先配置本地的 Git 的用户名和邮箱。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;0xfaner&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;0xfaner@gmail.com&quot;</span></span><br></pre></td></tr></table></figure>
<p>然后生成密钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;0xfaner@gmail.com&quot;</span></span><br></pre></td></tr></table></figure>
<p>生成过程中会需要我们输入三次信息，分别是需要保存密钥的位置，密钥的密码和重复密钥的密码，我们无需理会，全部回车跳过即可。密钥的位置默认保存在 <code>~\.ssh\</code> 文件夹中，其中私钥是 <code>id_rsa</code> 文件，公钥是 <code>id_rsa.pub</code> 文件。</p>
<h2 id="创建-github-账户">创建 GitHub 账户</h2>
<p>我们需要在 GitHub 注册一个账号，并在本地安装 Git 来将本地生成的静态文件部署到 GitHub Pages。</p>
<h2 id="创建-github-仓库">创建 GitHub 仓库</h2>
<p>我们先在 GitHub 中创建两个仓库：</p>
<ul>
<li>第一个名为 <code>0xfaner.github.io</code> ：用作 GitHub Pages 的仓库。注意开头必须为自己 GitHub 账号的 <code>username</code> 而不是 <code>nickname</code>。</li>
<li>第二个名为 <code>hexo-blog</code>：站点源文件的仓库。当然这个仓库的名字你可以自由发挥。</li>
</ul>
<h2 id="添加-ssh-key">添加 SSH key</h2>
<p>创建完仓库后，我们要让本地的 Git 获得操作仓库的权限。复制公钥的内容，加入到 GitHub 账号的 SSH Key 中。</p>
<p>使用以下命令即可快捷复制公钥内容到剪贴板。访问网页 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3NzaC9uZXc=">github.com/settings/ssh/new<i class="fa fa-external-link-alt"></i></span> 即可快捷为 GitHub 账户添加 SSH 密钥，将公钥的内容粘贴到 Key 框中，Title 可以随意命名，点击 Add SSH key 即可完成 SSH 密钥的添加。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub | clip</span><br></pre></td></tr></table></figure>
<h2 id="获取-personal-access-token">获取 Personal access token</h2>
<p>为了让 GitHub Action 有权限向你的仓库 push 静态文件，我们需要创建一个 Personal access tokens（简称 Pat）。访问网页 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3Rva2Vucy9uZXc=">github.com/settings/tokens/new<i class="fa fa-external-link-alt"></i></span> 以进行创建。</p>
<p>其中 Note 可以随意填写，Expiration 可以设置为无限，但是为了安全起见，也可以设置为一个有限的期限。不过你要记得在它过期以前及时更新。权限部分只要勾上 repo 的权限即可。点击创建以后，你会获得一个以 <code>ghp_</code> 开头的字符串，这就是你的 Pat，将它保存好。</p>
<h2 id="设置-actions-secret">设置 Actions secret</h2>
<p>为了让你的 GitHub Action 能够获取到 Pat，同时又不把它泄露出去，你需要在你站点源文件仓库的设置页面中找到 <code>Secrets</code> 选项的 <code>Actions</code> 子选项，将你的 Pat 加入到里面。</p>
<p>填写时需要键入一个键值对，键可以随意起名，我使用的是 <code>HEXO_CI_TOKEN</code>，值即为你的 Pat。在下面的 GitHub Action 配置文件中，我们会通过 <code>$&#123;&#123;secrets.HEXO_CI_TOKEN&#125;&#125;</code> 来获取到你的 Pat。</p>
<h2 id="修改-github-action-配置文件">修改 GitHub Action 配置文件</h2>
<p>我们需要在 Hexo 根目录下创建 <code>.github/workflows</code> 文件夹，该文件夹下的 <code>.yml</code> 将被视为 GitHub Action 的配置文件，文件名可以自定义，本文采用 <code>deploy.yml</code>。</p>
<p>我们在 <code>.github/workflows/deploy.yml</code> 文件中写入如下内容。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">GitHub</span> <span class="string">Pages</span> <span class="string">CI/CD</span> <span class="string">Action</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build_and_deploy_job:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">deploy</span> <span class="string">job</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;18&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          sudo apt install -y pandoc</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Site</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm run build</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">github</span> <span class="string">pages</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">public</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git init</span></span><br><span class="line"><span class="string">          git add .</span></span><br><span class="line"><span class="string">          git -c user.name=&#x27;0xfaner&#x27; -c user.email=&#x27;0xfaner@gmail.com&#x27; commit -m &#x27;site update&#x27;</span></span><br><span class="line"><span class="string">          git remote add origin https://$&#123;&#123;secrets.HEXO_CI_TOKEN&#125;&#125;@github.com/0xfaner/0xfaner.github.io.git</span></span><br><span class="line"><span class="string">          git push origin master -f -q</span></span><br></pre></td></tr></table></figure>
<p>其中包括四个步骤：</p>
<ul>
<li><p>准备环境：使用 Ubuntu 环境，加入 Git 和 Node.js 的支持；</p></li>
<li><p><code>Install Dependencies</code>：安装 NPM 依赖，Pandoc 是<a href="#数学公式">数学公式插件</a>的要求；</p></li>
<li><p><code>Build Hexo Site</code>: 执行 NPM 脚本 <code>build</code>，生成静态文件；</p></li>
<li><p><code>Deploy To GitHub Pages</code>: 用 Git 将静态文件部署到 GitHub Pages。</p></li>
</ul>
<p>这个 GitHub Action 将在你向站点源文件仓库 Push 代码时触发，它会自动创建环境、安装依赖、生成静态文件并部署到 GitHub。</p>
<h2 id="收尾">收尾</h2>
<p>现在让我们将站点源代码项目 Push 到 GitHub 中去，GitHub Action 将会自动运行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin git@github.com:0xfaner/hexo-blog.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>在仓库的 Action 标签页可以看到 GitHub Action 运行时的详细信息。不出意外的话，你的博客会在几分钟内准备好，接下来可以开始你的写作了。</p>
<h1 id="部署到远程服务器">部署到远程服务器</h1>
<h2 id="从安装环境开始-1">从安装环境开始</h2>
<p>如果我们希望将博客部署到远程服务器，那么我们就没有 GitHub Pages 和 GitHub Actions 可用了。</p>
<p>服务器中需要安装 Git 和 Nginx，分别用于接收静态文件，和建立网站服务，本文中服务器系统为 Debian。</p>
<h2 id="配置本地-hexo">配置本地 Hexo</h2>
<p>我们需要安装对应的插件。可以参考前文的<a href="#远端部署">远程部署</a></p>
<h2 id="配置本地-git-1">配置本地 Git</h2>
<p>我们需要在本地配好 Git 公钥私钥和用户名密码。可以参考前文的<a href="#配置本地-git">配置本地 Git</a></p>
<h2 id="配置服务器-git">配置服务器 Git</h2>
<p>首先安装 Git，然后查看 Git 是否安装完成。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install git -y</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>
<p>出于安全考虑，我们新建一个名为 git 的用户，专门用于接收静态文件，然后切换到 git 用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd git</span><br><span class="line">passwd git</span><br><span class="line">su git</span><br></pre></td></tr></table></figure>
<p>然后我们分别配置 Git 仓库的路径和静态文件的路径。Git 仓库目录在 <code>/home/git/repos/blog.git</code> ，静态文件部署在 <code>/home/git/projects/blog</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/</span><br><span class="line"><span class="built_in">mkdir</span> -p projects/blog</span><br><span class="line"><span class="built_in">mkdir</span> repos &amp;&amp; <span class="built_in">cd</span> repos</span><br><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure>
<p>我们需要配置 Git，利用 <code>post-receive</code> 实现自动化部署。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog.git/hooks</span><br><span class="line">vim post-receive</span><br></pre></td></tr></table></figure>
<p>输入内容如下（不了解文本编辑器 Vim 操作的用户需要自行了解一下）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure>
<p>然后配置可执行权限。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x post-receive</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="built_in">chown</span> -R git:git /home/git/repos/blog.git</span><br></pre></td></tr></table></figure>
<p>然后我们测试一下仓库是否成功配置，在本地运行命令尝试将远端仓库 Clone 下来。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@blog.0xfaner.site:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure>
<p>如果能够把空仓库拉下来就说明配置完成。</p>
<p>然后我们建立 SSH 信任关系：</p>
<div class="note warning"><p><code>ssh-copy-id</code> 命令为 <code>Git Bash</code> 自带。</p>
</div>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub git@blog.0xfaner.site</span><br><span class="line">ssh -T git@blog.0xfaner.site</span><br></pre></td></tr></table></figure>
<p>如果不需要密码而成功登陆了，那么说明配置完成，运行命令 <code>logout</code> 即可退出登录。</p>
<p>安全起见，修改 <code>/etc/passwd</code> 文件，让 git 用户使用 Git Shell，这样它就只能使用 <code>git clone</code> 与 <code>git push</code> 等命令。</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- git:x:1000:1000::/home/git:/bin/bash</span></span><br><span class="line"><span class="addition">+ git:x:1000:1000::/home/git:/usr/bin/git-shell</span></span><br></pre></td></tr></table></figure>
<h2 id="配置-nginx">配置 Nginx</h2>
<p>首先使用包管理安装 Nginx，然后查看 Nginx 是否安装完成。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install nginx -y</span><br><span class="line">nginx -v</span><br></pre></td></tr></table></figure>
<p>安装完成后，启动 Nginx。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nginx</span><br></pre></td></tr></table></figure>
<p>然后访问自己服务器的 IP 或域名来看看效果，如果无法访问，那么需要检查下服务器防火墙以及云服务器商的安全组策略。</p>
<p>修改 Nginx 的配置文件 nginx.conf，一般目录为 <code>/etc/nginx/nginx.conf</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>
<p>如果目录位置不对，那么寻找一下 Nginx 的安装位置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis nginx</span><br></pre></td></tr></table></figure>
<p>根据显示的目录找一下。</p>
<p>将其中的 <code>user</code> 从默认的 <code>nginx</code> 改为 <code>git</code> 或 <code>root</code> 以确保访问权限，防止出现 <code>403 Forbidden</code> 的无权限错误。</p>
<p>同时将根目录修改为静态文件所在的目录。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">user</span> git;</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">        <span class="attribute">root</span> /home/git/projects/blog;</span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="开启-https-与-301-跳转">开启 HTTPS 与 301 跳转</h2>
<p>首先需要获取一份证书，可以使用 <span class="exturl" data-url="aHR0cHM6Ly9sZXRzZW5jcnlwdC5vcmc=">Let's Encrypt<i class="fa fa-external-link-alt"></i></span> 的免费证书或在阿里云等服务商处代为申请。</p>
<p>因为是纯静态博客，所以也不需要用 Certbot 等工具进行一键 HTTPS 配置，直接在 Nginx 里面加载证书就行。</p>
<p>首先将证书传输到服务器中，包括 <code>.pem</code> 和 <code>.key</code> 两个文件。然后将 <code>nginx.conf</code> 文件中的 HTTPS 部分取消注释，修改根目录，并配置证书路径。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">user</span> git;</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">        <span class="attribute">root</span> /home/git/projects/blog;</span><br><span class="line">        <span class="attribute">if</span> (<span class="variable">$scheme</span> = http) &#123;</span><br><span class="line">            <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">         <span class="attribute">root</span> /home/git/projects/blog;</span><br><span class="line">         <span class="attribute">ssl_certificate</span> <span class="string">&quot;new_path&quot;</span>;</span><br><span class="line">         <span class="attribute">ssl_certificate_key</span> <span class="string">&quot;new_path&quot;</span>;</span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改完成后，重启 Nginx 即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>
<h2 id="收尾-1">收尾</h2>
<p>现在让我们在站点源代码执行命令，把静态文件发布到远程仓库吧。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run publish</span><br></pre></td></tr></table></figure>
<p>不出意外的话，你的博客会在几分钟内准备好，接下来可以开始你的写作了。</p>
<h1 id="后记">后记</h1>
<p>废了不少时间重建博客重写博文，希望以后可以不用再折腾这个博客了（哭</p>
]]></content>
      <categories>
        <category>Tutorials</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT Theme</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio Code C/C++ 环境配置教程</title>
    <url>/posts/vscode-cpp-config/</url>
    <content><![CDATA[<h1 id="写在前面">写在前面</h1>
<p>Visual Studio Code（简称 VS Code）是一款轻量、高效、美观的跨平台源代码编辑器。它内置了对 JavaScript、TypeScript 和 Node.js 的支持，并为其他语言（如 C++、C#、Java、Python、PHP、Go）和运行时（如 .NET 和 Unity）提供了丰富的扩展生态系统。</p>
<p>在程序设计竞赛中，C++ 是每一位选手必须掌握的编程语言。本文将介绍如何为 Visual Studio Code 配置 C/C++ 环境。</p>
<span id="more"></span>
<h1 id="安装-cc-环境">安装 C/C++ 环境</h1>
<div class="note info"><p>VS Code 是一个 Editor（编辑器）而非 IDE（集成开发环境），所以想要 VS Code 能够编译或调试 C/C++ 程序，需要额外安装 C/C++ 环境。</p>
</div>
<p>安装环境的方案有很多，主要分为两种：</p>
<ul>
<li><p>单独安装编译器，这样可以自由指定安装的编译器的版本。</p></li>
<li><p>使用 IDE 的环境，如 Dev-C++、Code::Blocks、Visual Studio 等。</p></li>
</ul>
<p>本文将采取第一种方案：从 Winlibs 获取 GCC 和 MinGW-w64，并为其配置环境变量。</p>
<p>官网：<span class="exturl" data-url="aHR0cHM6Ly93aW5saWJzLmNvbS8=">WinLibs standalone build of GCC and MinGW-w64 for Windows<i class="fa fa-external-link-alt"></i></span></p>
<p>直接下载 Win64 | without LLVM/Clang/LLD/LLDB | Zip archive 版本的安装包即可。然后我们将其解压到用户目录下的 <code>AppData/Local/Programs</code> 文件夹中，确保解压后路径为 <code>C:/Users/0xfaner/AppData/Local/Programs/mingw64/</code>。</p>
<h2 id="配置环境变量">配置环境变量</h2>
<div class="note info"><p>配置环境变量的成功标准是能否在命令行中调用 <code>g++</code>。</p>
</div>
<p>步骤如下：</p>
<ol type="1">
<li>快捷键 <code>win + r</code> 打开运行栏，键入 <code>SYSDM.CPL</code> 并回车。即可打开「系统属性（System Properties）」页面。</li>
<li>依次点击「高级（Advanced）」标签、「环境变量（Environment Variables）」按钮，即可打开「环境变量（Environment Variables）」页面。</li>
<li>双击「0xfaner 的用户变量（User Variables for 0xfaner）」栏的 Path 字段，即可打开「编辑环境变量（Edit environment variables）」页面。</li>
<li>点击「新建（New）」，输入编译器路径（<code>C:\Users\0xfaner\AppData\Local\Programs\mingw64\bin</code>），点击「确定（OK）」即可。</li>
</ol>
<p>检验环境变量是否配置成功，可以在命令行窗口中键入 <code>g++ --version</code> 并回车。如果显示能够显示 g++ 的版本信息就说明配置成功了。</p>
<div class="note warning"><p>修改环境变量不会对已经启动的终端生效，因此修改完成后需要重启终端。同理 VS Code 也需要重启。</p>
</div>
<h1 id="安装-vs-code">安装 VS Code</h1>
<p>可以在官网下载，也可以在 Microsoft Store 中安装，也可以使用 WinGet 进行安装。</p>
<p>官网：<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20=">Visual Studio Code<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="vs-code-安装-cc-插件">VS Code 安装 C/C++ 插件</h1>
<p>点击左侧「扩展（Extensions）」进入应用商店，搜索 C/C++ 进行安装（发布者为 Microsoft）。</p>
<div class="note info"><p>VS Code 可以通过安装插件来设置显示语言为中文（如果你需要的话），插件名为 <code>Chinese (Simplified) Language Pack for Visual Studio Code</code>。</p>
</div>
<h1 id="vs-code-创建项目文件夹">VS Code 创建项目文件夹</h1>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9jcHAvY29uZmlnLW1pbmd3">Using GCC with MinGW<i class="fa fa-external-link-alt"></i></span></p>
<p>Dev-C++ 可以直接编译或调试单文件，但 VS Code 的调试只能在打开的文件夹中进行。你需要建立一个「项目文件夹」，以后调试就在这个「项目文件夹」中进行。</p>
<div class="note danger"><p>MinGW 的 GDB 不能调试中文路径的程序，因此请尽量避免使用中文路径名。以下两种情况请特别注意：</p>
<ol type="1">
<li><p>用户文件夹名为中文，而你的项目恰好在桌面文件夹、文档等目录下。如：<code>C:/Users/柏咕咕/Desktop/Project</code>。</p></li>
<li><p>程序文件名为中文，文件名也被视为路径的一部分。如：<code>C:/Users/0xfaner/Desktop/Project/项目.cpp</code>。</p></li>
</ol>
</div>
<div class="note success"><p>推荐在用户目录（例如：<code>C:/Users/0xfaner</code>）下新建 <code>workspace</code> 文件夹，作为所有的项目的总文件夹。每次需要新建项目时，可以直接在 <code>workspace</code> 文件夹下新建文件夹，并使用 VS Code 打开。</p>
</div>
<p>假定「项目文件夹」为 cpp-space，路径为 <code>C:/Users/0xfaner/workspace/cpp-space</code>。在 VS Code 中依次点击「文件（File）」和「打开文件夹（Open File）」，选择 <code>cpp-space</code> 即可打开文件夹。</p>
<h1 id="vs-code-创建配置文件">VS Code 创建配置文件</h1>
<p>接下来我们在项目中新建配置文件（资源管理器或者 VS Code 都可以新建），结构目录如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">└── cpp-space</span><br><span class="line">    ├── test.cpp</span><br><span class="line">    └── .vscode</span><br><span class="line">        ├── launch.json</span><br><span class="line">        └── tasks.json</span><br></pre></td></tr></table></figure>
<p>以下是分别对应的文件的内容，直接复制粘贴即可。</p>
<figure class="highlight json"><figcaption><span>tasks.json</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++ build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Users\\0xfaner\\AppData\\Local\\Programs\\mingw64\\bin\\g++.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-fdiagnostics-color=always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-Wfatal-errors&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-Wextra&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-Wall&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;relativeFile&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;relativeFileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-std=c++11&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight json"><figcaption><span>launch.json</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;(GDB) Launch &amp; Pause&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;/C&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;relativeFileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;&amp;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;pause&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Users\\0xfaner\\AppData\\Local\\Programs\\mingw64\\bin\\gdb.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++ build&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;(GDB) Launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Users\\0xfaner\\AppData\\Local\\Programs\\mingw64\\bin\\gdb.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++ build&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><figcaption><span>test.cpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; a + b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note danger"><p>配置文件中包含了编译器路径：<code>tasks.json</code> 中的 <code>command</code> 字段和 <code>launch.json</code> 中的<strong>两个</strong> <code>miDebuggerPath</code> 字段。如果你将编译器安装到了其他路径，那么你需要修改这两个字段的值。</p>
<p>具体地，你需要把 <code>C:\\Users\\0xfaner\\AppData\\Local\\Programs\\mingw64\\bin\\</code> 替换为实际的编译器路径。以 Dev-C++ 的默认编译器路径为例，<code>miDebuggerPath</code> 字段的值应为 <code>C:\\Program Files\\Dev-C++\\MinGW64\\bin\\gdb.exe</code>。</p>
</div>
<p>配置完成后我们在 <code>test.cpp</code> 的代码页按 <code>F5</code>，即可编译并运行程序。我们在弹出的窗口键入 <code>1 2</code>，在第二行出现了 <code>3</code>，说明配置成功！</p>
<div class="note info"><p>实际上该配置文件中包含两种运行方案，你可以在 VS Code 最左侧的「运行与调试（Run and Debug）」栏中切换方案。两种方案的区别会在下文进行解释。</p>
</div>
<h1 id="配置文件的解释">配置文件的解释</h1>
<h2 id="tasks.json">tasks.json</h2>
<p><code>tasks.json</code> 用于描述任务，这里我们只添加了一个任务：<code>g++ build</code>，用于生成可执行文件。</p>
<p>注意看 <code>tasks.json</code> 的 <code>command</code> <code>args</code> 字段，实际上对应了如下命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:/Users/0xfaner/AppData/Local/Programs/mingw64/bin/g++.exe -fdiagnostics-color=always -Wfatal-errors -Wextra -Wall -g Code.cpp -o ./Code.exe -std=c++11</span><br></pre></td></tr></table></figure>
<p>这个命令就是我们手写编译时的命令，解释一下部分编译选项：</p>
<ul>
<li><p><code>-fdiagnostics-color=always</code>：显示彩色诊断信息。</p></li>
<li><p><code>-Wfatal-errors</code>：让编译器在遇到第一个错误时中止编译，而不是尝试继续并打印进一步的错误消息。</p></li>
<li><p><code>-Wextra</code>：对于部分事件打印额外的警告信息。</p></li>
<li><p><code>-Wall</code>：启用更多更严格的警告信息。</p></li>
<li><p><code>-g</code>: 编译器在编译时产生调试信息。</p></li>
<li><p><code>-std=c++11</code>：使用 <code>C++11</code> 标准。</p></li>
</ul>
<h2 id="launch.json">launch.json</h2>
<p><code>launch.json</code> 文件用于配置调试器，这里我们添加了两个任务：<code>(GDB) Launch &amp; Pause</code> 和 <code>(GDB) Launch</code>，分别代表 release 和 debug 模式下的运行。</p>
<p>当我们无需进行调试的时候，我们可以使用 <code>(GDB) Launch &amp; Pause</code>，程序运行结束后还要再按一次按键才会退出窗口。这和 Dev-C++ 的表现一致。</p>
<p>当我们需要调试时，我们可以使用 <code>(GDB) Launch</code>，此时 VS Code 中设置的断点将会生效，并支持单步调试。</p>
<p>解释一下配置文件的部分字段：</p>
<ul>
<li><p><code>program</code> 与 <code>args</code>：调用的程序和给定的参数。</p></li>
<li><p><code>preLaunchTask</code>：调试器启动前执行的任务，这里执行的任务就是 <code>tasks.json</code> 的任务，需要保证该字段的值在 <code>tasks.json</code> 中有对应的 <code>label</code>。</p></li>
<li><p><code>cwd</code>：调试器启动时的工作目录，这里设置为「项目文件夹」。</p></li>
</ul>
]]></content>
      <categories>
        <category>Tutorials</category>
      </categories>
      <tags>
        <tag>Visual Studio Code</tag>
        <tag>Competitive Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Subsystem for Linux 配置记录</title>
    <url>/posts/wsl-config/</url>
    <content><![CDATA[<h1 id="写在前面">写在前面</h1>
<p>Windows Subsystem for Linux（简称 WSL）顾名思义是在 Windows 上运行的 Linux 子系统。搭配 Windows Terminal，开发者可以获得直接在 Windows 上运行 GNU/Linux 环境的极佳体验。</p>
<p>需要注意的是，WSL 本身并不是一个 Linux 发行版，我们需要挑选一款我们中意的 Linux 发行版进行安装。本文将记录我配置 WSL 的 Debian 镜像的部分操作。</p>
<span id="more"></span>
<h1 id="安装-wsl">安装 WSL</h1>
<p>首先用 Powershell 列出可用的发行版：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># list all online distributions</span></span><br><span class="line">wsl <span class="literal">--list</span> <span class="literal">--online</span></span><br></pre></td></tr></table></figure>
<p>然后选择安装 Debian：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--install</span> <span class="literal">--distribution</span> debian</span><br></pre></td></tr></table></figure>
<p>安装完成后可以在 Windows Terminal 中看到 WSL 的 Profile。</p>
<h1 id="配置代理">配置代理</h1>
<p>让 WSL 使用 Windows 的代理，如果你不需要，可以跳至下一节。</p>
<p>首先向 <code>~/.bashrc</code> 追加写入以下内容（这里假设 Windows 端代理端口为 1080）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># proxy operation</span></span><br><span class="line"><span class="function"><span class="title">proxy</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$@</span> == <span class="string">&#x27;enable&#x27;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># Get host ip</span></span><br><span class="line">        <span class="built_in">export</span> HOST_IP=$(ip route | grep default | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>);</span><br><span class="line">        <span class="built_in">export</span> PROXY_PORT=1080;</span><br><span class="line">        <span class="built_in">export</span> &#123;all_proxy,ALL_PROXY&#125;=<span class="string">&quot;socks5://<span class="variable">$&#123;HOST_IP&#125;</span>:<span class="variable">$&#123;PROXY_PORT&#125;</span>&quot;</span>;</span><br><span class="line">        <span class="built_in">export</span> &#123;ftp_proxy,FTP_PROXY&#125;=<span class="string">&quot;http://<span class="variable">$&#123;HOST_IP&#125;</span>:<span class="variable">$&#123;PROXY_PORT&#125;</span>&quot;</span>;</span><br><span class="line">        <span class="built_in">export</span> &#123;http_proxy,HTTP_PROXY&#125;=<span class="string">&quot;http://<span class="variable">$&#123;HOST_IP&#125;</span>:<span class="variable">$&#123;PROXY_PORT&#125;</span>&quot;</span>;</span><br><span class="line">        <span class="built_in">export</span> &#123;https_proxy,HTTPS_PROXY&#125;=<span class="string">&quot;http://<span class="variable">$&#123;HOST_IP&#125;</span>:<span class="variable">$&#123;PROXY_PORT&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="variable">$@</span> == <span class="string">&#x27;disable&#x27;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">unset</span> &#123;all_proxy,ALL_PROXY&#125;;</span><br><span class="line">        <span class="built_in">unset</span> &#123;ftp_proxy,FTP_PROXY&#125;;</span><br><span class="line">        <span class="built_in">unset</span> &#123;http_proxy,HTTP_PROXY&#125;;</span><br><span class="line">        <span class="built_in">unset</span> &#123;https_proxy,HTTPS_PROXY&#125;;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;all_proxy,   ALL_PROXY   =&#x27;</span> <span class="variable">$&#123;all_proxy:-&#x27;none&#x27;&#125;</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;ftp_proxy,   FTP_PROXY   =&#x27;</span> <span class="variable">$&#123;ftp_proxy:-&#x27;none&#x27;&#125;</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;http_proxy,  HTTP_PROXY  =&#x27;</span> <span class="variable">$&#123;http_proxy:-&#x27;none&#x27;&#125;</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;https_proxy, HTTPS_PROXY =&#x27;</span> <span class="variable">$&#123;https_proxy:-&#x27;none&#x27;&#125;</span>;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable proxy</span></span><br><span class="line">proxy <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># add sudop alias</span></span><br><span class="line"><span class="built_in">alias</span> sudop=<span class="string">&#x27;sudo --preserve-env=all_proxy,ALL_PROXY,ftp_proxy,FTP_PROXY,http_proxy,HTTP_PROXY,https_proxy,HTTPS_PROXY&#x27;</span></span><br></pre></td></tr></table></figure>
<p>重启 Terminal，检查代理是否生效：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxy</span><br></pre></td></tr></table></figure>
<h1 id="apt-包管理">APT 包管理</h1>
<p>首先更新包管理：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudop apt update</span><br><span class="line">sudop apt upgrade</span><br></pre></td></tr></table></figure>
<p>最后安装一些常用的包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudop apt install -y vim curl wget git</span><br></pre></td></tr></table></figure>
<h1 id="为-bash-配置-oh-my-posh">为 Bash 配置 Oh My Posh</h1>
<p>首先下载 Oh My Posh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudop wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-posh</span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/oh-my-posh</span><br></pre></td></tr></table></figure>
<p>然后检查安装是否成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oh-my-posh --version</span><br></pre></td></tr></table></figure>
<p>接下来我们下载 Oh My Posh 的主题，首先安装 <code>unzip</code> 用于解压：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudop apt install -y unzip</span><br></pre></td></tr></table></figure>
<p>然后下载主题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.poshthemes</span><br><span class="line">wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/themes.zip -O ~/.poshthemes/themes.zip</span><br><span class="line">unzip ~/.poshthemes/themes.zip -d ~/.poshthemes</span><br><span class="line"><span class="built_in">chmod</span> u+rw ~/.poshthemes/*.omp.*</span><br><span class="line"><span class="built_in">rm</span> ~/.poshthemes/themes.zip</span><br></pre></td></tr></table></figure>
<p>最后在 <code>~/.bashrc</code> 中追加写入以下内容:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># enable oh-my-posh</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(oh-my-posh init bash --config ~/.poshthemes/ys.omp.json)</span>&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="配置开发环境">配置开发环境</h1>
<p>推荐在 VS Code 中安装插件 <code>Remote - SSH</code> 以获得最佳开发体验。</p>
<h2 id="配置-git">配置 Git</h2>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL3dpbmRvd3Mvd3NsL3R1dG9yaWFscy93c2wtZ2l0">Get started using Git on Windows Subsystem for Linux<i class="fa fa-external-link-alt"></i></span></p>
<p>首先进行基本配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;0xfaner&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;0xfaner@gmail.com&quot;</span></span><br><span class="line">git config --global init.defaultBranch master</span><br><span class="line">git config --global core.editer <span class="string">&quot;code --wait&quot;</span></span><br><span class="line">git config --global credential.helper <span class="string">&quot;/mnt/c/Program\ Files/Git/mingw64/bin/git-credential-manager-core.exe&quot;</span></span><br></pre></td></tr></table></figure>
<p>然后将 Windows 端的 SSH 密钥拷贝到 WSL 中使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /mnt/c/Users/0xfaner/.ssh ~</span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>
<p>最后检查 SSH 密钥是否配置成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<h2 id="配置-cc-环境">配置 C/C++ 环境</h2>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9jcHAvY29uZmlnLXdzbA==">Using C++ and WSL in VS Code<i class="fa fa-external-link-alt"></i></span></p>
<p>首先安装必要的包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudop apt install -y build-essential gdb</span><br></pre></td></tr></table></figure>
<p>然后检查是否安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">gdb --version</span><br></pre></td></tr></table></figure>
<h2 id="配置-node.js-环境">配置 Node.js 环境</h2>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL3dpbmRvd3MvZGV2LWVudmlyb25tZW50L2phdmFzY3JpcHQvbm9kZWpzLW9uLXdzbA==">Install Node.js on Windows Subsystem for Linux (WSL2)<i class="fa fa-external-link-alt"></i></span></p>
<p>首先安装 NVM：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash</span><br></pre></td></tr></table></figure>
<p>然后重启 Terminal，检查安装是否成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm --version</span><br></pre></td></tr></table></figure>
<p>接着安装 LTS 版本的 Node.js：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm install --lts</span><br></pre></td></tr></table></figure>
<p>检查当前状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<h2 id="配置-rust-环境">配置 Rust 环境</h2>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVzdC1sYW5nLm9yZy9sZWFybi9nZXQtc3RhcnRlZCNwbGF0Zm9ybS1pbnN0cnVjdGlvbnMtd2lu">Getting started - Rust Programming Language<i class="fa fa-external-link-alt"></i></span></p>
<p>只需运行如下命令即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://sh.rustup.rs | sh</span><br></pre></td></tr></table></figure>
<h2 id="配置-ruby-jekyll-环境">配置 Ruby (Jekyll) 环境</h2>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9qZWt5bGxyYi5jb20vZG9jcy9pbnN0YWxsYXRpb24vdWJ1bnR1Lw==">Jekyll on Ubuntu<i class="fa fa-external-link-alt"></i></span></p>
<p>首先安装必要的包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudop apt install ruby-full build-essential zlib1g-dev</span><br></pre></td></tr></table></figure>
<p>然后检查安装是否成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby --version</span><br><span class="line">gem --version</span><br></pre></td></tr></table></figure>
<p>最后在 <code>~/.bashrc</code> 中追加写入以下内容:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Install Ruby Gems to ~/gems</span></span><br><span class="line"><span class="built_in">export</span> GEM_HOME=<span class="string">&quot;<span class="variable">$HOME</span>/gems&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/gems/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Records</category>
      </categories>
      <tags>
        <tag>Windows Subsystem for Linux</tag>
        <tag>Debian</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Terminal 与 PowerShell 配置记录</title>
    <url>/posts/wt-pwsh-config/</url>
    <content><![CDATA[<h1 id="写在前面">写在前面</h1>
<p>Windows Terminal 是微软推出的一款美观易用的终端工具。解决了 Unicode 和 UTF-8 字符渲染问题，使用 GPU 加速文本呈现引擎，并提供了足够的可定制化空间。</p>
<p>需要注意的是 Windows Terminal 并不是一个 Shell，我们仍需要通过 PowerShell 或 Command Prompt 来与系统进行交互。</p>
<p>本文将记录我配置 Windows Terminal 和 PowerShell 的部分操作。</p>
<span id="more"></span>
<h1 id="安装-windows-terminal">安装 Windows Terminal</h1>
<p>Windows 11 自带 Windows Terminal。如果没有，也可以在 Microsoft Stroe 中安装。</p>
<p>参考： <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy90ZXJtaW5hbC9pbnN0YWxs">Install and get started setting up Windows Terminal<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="安装-windows-powershell-7">安装 Windows PowerShell 7</h1>
<p>Windows 自带的 PowerShell 版本为 5，可以在 Microsoft Stroe 中安装 PowerShell 7 来获得更多新特性。</p>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvcG93ZXJzaGVsbC9zY3JpcHRpbmcvaW5zdGFsbC9pbnN0YWxsaW5nLXBvd2Vyc2hlbGwtb24td2luZG93cw==">Installing PowerShell on Windows<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># View powershell version</span></span><br><span class="line"><span class="variable">$PSVersionTable</span></span><br></pre></td></tr></table></figure>
<h1 id="安装-nerd-font">安装 Nerd Font</h1>
<p>Oh My Posh 的大部分主题中都包含的特殊字符，需要使用 <span class="exturl" data-url="aHR0cHM6Ly93d3cubmVyZGZvbnRzLmNvbS8=">Nerd Font<i class="fa fa-external-link-alt"></i></span> 显示。</p>
<p>我使用的是 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pkc3plcm8vQ29uc29sYXMtd2l0aC1ZYWhlaS1OZXJkLUZvbnQ=">Consolas Nerd Font<i class="fa fa-external-link-alt"></i></span>。</p>
<p>微软官方推荐的是 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9jYXNjYWRpYS1jb2Rl">Cascadia Code<i class="fa fa-external-link-alt"></i></span> 字体，但是这并不是一个 Nerd Font，而是 PowerLine Font，特殊字符会少一点。</p>
<h1 id="安装-oh-my-posh">安装 Oh My Posh</h1>
<p>使用 Oh My Posh 自定义 PowerShell Prompt。</p>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9vaG15cG9zaC5kZXYvZG9jcy9pbnN0YWxsYXRpb24vd2luZG93cw==">Windows | Oh My Posh<i class="fa fa-external-link-alt"></i></span></p>
<div class="note warning"><p>Oh My Posh 的历史版本采用了 Modules 的安装方式，但这种安装方式即将被弃用。如果在此之前曾用 Modules 的方式安装，可以参考该链接进行迁移。</p>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9vaG15cG9zaC5kZXYvZG9jcy9taWdyYXRpbmc=">PowerShell Module Migration<i class="fa fa-external-link-alt"></i></span></p>
</div>
<p>我们采用 Winget 包管理器进行安装。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">winget install <span class="built_in">oh</span><span class="literal">-my-posh</span></span><br></pre></td></tr></table></figure>
<p>安装完成后重启 Windows Terminal 以刷新环境变量。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># View oh-my-posh version</span></span><br><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> <span class="literal">--version</span></span><br></pre></td></tr></table></figure>
<h1 id="配置-powershell-profile">配置 PowerShell Profile</h1>
<p>Profile 文件的作用相当于于 Bash 中的 <code>.bashrc</code> 文件，PowerShell 启动时会加载 Profile。</p>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvcG93ZXJzaGVsbC9tb2R1bGUvbWljcm9zb2Z0LnBvd2Vyc2hlbGwuY29yZS9hYm91dC9hYm91dF9wcm9maWxlcw==">about_Profiles<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># View profile path</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$Profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit profile with vscode</span></span><br><span class="line">code <span class="variable">$Profile</span></span><br></pre></td></tr></table></figure>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set prompt theme as ys</span></span><br><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> init pwsh <span class="literal">--config</span> <span class="string">&quot;<span class="variable">$env:POSH_THEMES_PATH</span>/ys.omp.json&quot;</span> | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure>
<h2 id="git-bash-配置">Git Bash 配置</h2>
<p>想要把 Oh My Posh 应用在 Git Bash 中，可以执行以下命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Edit .bashrc with vscode</span></span><br><span class="line">code ~/.bashrc</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set prompt theme as ys</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(oh-my-posh init bash --config $POSH_THEMES_PATH&#x27;/ys.omp.json&#x27;)</span>&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="配置-windows-terminal">配置 Windows Terminal</h1>
<p><code>Ctrl + ~</code> 快捷键呼出设置，点击左下角即可直接编辑 Windows Terminal 配置的 Json 文件。</p>
<p>我们可以通过配置文件来自定义 Windows Terminal 的配色、快捷键、标签页等属性。我选用了 Galaxy 主题，并进行了一定的修改。</p>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy90ZXJtaW5hbC9jdXN0b21pemUtc2V0dGluZ3Mvc3RhcnR1cA==">Startup settings in Windows Terminal<i class="fa fa-external-link-alt"></i></span><br />
参考：<span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzdGVybWluYWx0aGVtZXMuZGV2">windowsterminalthemes.dev<i class="fa fa-external-link-alt"></i></span></p>
<p>给出我的配置文件，仅供参考。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;$help&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://aka.ms/terminal-documentation&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$schema&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://aka.ms/terminal-profiles-schema&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;actions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;copy&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;singleLine&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctrl+c&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;paste&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctrl+v&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;find&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctrl+shift+f&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;splitPane&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;split&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;splitMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;duplicate&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keys&quot;</span><span class="punctuation">:</span> <span class="string">&quot;alt+shift+d&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;copyFormatting&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;copyOnSelect&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;defaultProfile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;profiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;colorScheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Galaxy&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;font&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;face&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Consolas Nerd Font&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;suppressApplicationTitle&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;commandline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pwsh.exe -Nologo&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;574e775e-4f2a-5b96-ac1e-a2962a402336&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows PowerShell 7&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows.Terminal.PowershellCore&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;58ad8b0c-3ef8-5f4d-bc6f-13e4c00f2530&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debian&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows.Terminal.Wsl&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows PowerShell&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Command Prompt&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;2ece5bfe-50ed-5f3a-ab87-5cd4baafed2b&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Git Bash&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Git&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Azure Cloud Shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows.Terminal.Azure&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;schemes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#222324&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;black&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#000000&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;blue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#589DF6&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brightBlack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#555555&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brightBlue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#589DF6&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brightCyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#3979BC&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brightGreen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#35BB9A&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brightPurple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#E75699&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brightRed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FA8C8F&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brightWhite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brightYellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFF55&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cursorColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#BBBBBB&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#1F9EE7&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;green&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#21B089&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Galaxy&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;purple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#944D95&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;red&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#F9555F&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;selectionBackground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#B5D5FF&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;white&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#BBBBBB&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;yellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FEF02A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Records</category>
      </categories>
      <tags>
        <tag>Windows Terminal</tag>
        <tag>PowerShell</tag>
        <tag>Bash</tag>
        <tag>Oh My Posh</tag>
      </tags>
  </entry>
</search>
